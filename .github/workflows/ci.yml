name: CI

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        features: [--no-default-features, --all-features]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install ${{ matrix.toolchain }} toolchain
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: ${{ matrix.features }} --workspace

  no-std:
    name: no_std Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install nightly toolchain
        run: |
          rustup update nightly
          rustup default nightly

      - name: Install cargo no-std-check
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-no-std-check

      # https://github.com/mystor/cargo-no-std-check/issues/2
      # `--no-default-features` doesn't work with `--workspace` correctly.
      - name: Run cargo no-std-check on libflate crate
        uses: actions-rs/cargo@v1
        with:
          command: no-std-check
          args: --no-default-features

      - name: Run cargo no-std-check on libflate_lz77 crate
        uses: actions-rs/cargo@v1
        with:
          command: no-std-check
          args: --no-default-features --manifest-path libflate_lz77/Cargo.toml

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        features: [--no-default-features, --all-features]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install ${{ matrix.toolchain }} toolchain
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }} --workspace

  lints:
    name: Lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        features: [--no-default-features, --all-features]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install ${{ matrix.toolchain }} toolchain
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add rustfmt clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        if: matrix.toolchain != 'beta'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.features }} --workspace -- -D warnings
